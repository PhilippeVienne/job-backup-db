#!/usr/bin/env bash

set -e
set +o pipefail
. "$BAGCLI_WORKDIR/common"

export PG_COLOR=never
export PGHOST="$BAGCLI_DATABASE_HOST"
export PGPORT="$BAGCLI_DATABASE_PORT"
export PGOPTIONS="$BAGCLI_DATABASE_OPTIONS"
export PGUSER="$BAGCLI_DATABASE_USER"
export PGPASSWORD="$BAGCLI_DATABASE_PASS"


cli_log "Backup all databases with user $PGUSER BEGIN"

cli_log "ENV variables"
env | grep "BAGCLI_*" | grep -v "PASS"

postgresDump() {
  cli_log "Executing pg_dump"
  pg_dumpall --file="$BAGCLI_BACKUP_PATH"/backup.sqlc.dump
  return "${PIPESTATUS[0]}"
}

removeOldBackup() {
  cli_log "Removing backups older than $BAGCLI_RETENTION_TIME"
  mc rm --recursive --force --older-than "$BAGCLI_RETENTION_TIME" s3/"$BAGCLI_BUCKET_PATH"/ || true
}

copyToS3() {
  cli_log "Copy of local dump to s3"
  mc cp --quiet /tmp/backup.sqlc.dump s3/"$BAGCLI_BUCKET_PATH"/pg_dumpall_"$(date +'%d_%m_%Y__%H_%M_%S')".sqlc.dump
  return "${PIPESTATUS[0]}"
}

clearTmpFolder() {
  cli_log "Cleaning /tmp folder"
  rm /tmp/backup.sqlc.dump
}

checkSucceed() {
  if [ $? -gt 0 ]; then
    cli_log "[KO] $?"
    exit "$1"
  fi
}

main(){
  postgresDump
  checkSucceed "mysqldump failed"

  removeOldBackup
  checkSucceed "removing old backups failed"

  copyToS3
  checkSucceed "copying to the s3 bucket failed"

  clearTmpFolder
  checkSucceed "cleaning temporary folder failed"

  heartbeatPing
  cli_log "job succeed"

  postToWebhook
  cli_log "post to WebHook succeed"
}

main